<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
        xmlns:cc="http://java.sun.com/jsf/composite"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:c="http://java.sun.com/jsp/jstl/core"
        xmlns:h="http://java.sun.com/jsf/html">

<cc:interface>
    <cc:attribute name="id" type="java.lang.String"
            shortDescription="Id da div que engloba todo o componente, o id direto da tabela html é {id}-dt"/>
    <cc:attribute name="bundle" type="java.lang.String"
            shortDescription="Identificação do arquivo de internacionalização dos textos que serão exibidos a partir da tabela"/>
    <cc:attribute name="content" type="java.util.Collection" required="true"
            shortDescription="Lista de objetos que serão exibidos na tabela"/>
    <cc:attribute name="hasActions" type="java.lang.Boolean" default="false"
            shortDescription="Define se a tabela terá uma coluna (a ultima) para ações nas linhas da tabela"/>
    <cc:attribute name="paging" type="java.lang.Boolean" default="true"
            shortDescription="Define se a tabela terá paginação"/>
    <cc:attribute name="headers" type="java.lang.String" required="true"
            shortDescription="Chaves do bundle para os cabeçalhos da tabela separados por ',' (virgula), em caso de chave vazia nada será exibido no cabeçalho. Exemplo: table.head.coluna1, table.head.coluna2, table.head.coluna1"/>
    <cc:attribute name="fields" type="java.lang.String" required="true"
            shortDescription="Atributos para cada linha do content, deve ser exatamente o mesmo do 'get' do atributo do objeto da lista, os valores são adquiridos via reflexão através do get do atributo, o valor impresso será do .toString() do atrbuto. Exemplos para userId(), getUserName(), getCpf(): userId, userName, cpf"/>
    <cc:attribute name="columnDefs" type="java.lang.String" default="{'type': 'natural', 'targets': 0}"
            shortDescription="Lista de JSONs de definições das colunas da tabela (veja: https://datatables.net/reference/option/columnDefs). Exemplo: {'type': 'natural', 'targets': 0}, {'class': 'tbody-right', 'orderable': false, 'targets': [1,2]}"/>
    <cc:attribute name="actionsHeader" type="java.lang.String"
            shortDescription="Chave para o texto do bundle para o cabeçalho da coluna de ações (só será exibido se hasActions=true), caso vazio nada será exibido no cabeçalho"/>
    <cc:attribute name="actionEvents" type="java.lang.String"
            shortDescription="Eventos vinculados aos elementos da coluna de ações da tablea cada eventos é separado por ',' (virgula) e os atributos do elemento são separados por ':' dois pontos. Mais detalhes em br.gov.to.sefaz.business.managedbean.composites.DataTableMB#parseActionEvents(String)"/>
    <cc:facet name="actions"
            shortDescription="Elementos HTML que serão replicados em cada linha da coluna de ações da tabela. Os eventos são mapeados através da classe do elemento HTML. Mais detalhes em br.gov.to.sefaz.business.managedbean.composites.DataTableMB#parseActionEvents(String)"/>
</cc:interface>

<cc:implementation>
    <ui:param name="fields" value="#{dataTableMB.parseFields(cc.attrs.fields)}"/>
    <ui:param name="columnDefs" value="#{cc.attrs.columnDefs}"/>
    <div id="#{cc.clientId}">
        <table id="#{cc.clientId}-dt" class="table table-hover">
            <thead>
                <tr>
                    <ui:repeat value="#{dataTableMB.parseHeaders(cc.attrs.headers, fields, cc.attrs.bundle)}"
                            var="head">
                        <th>#{head}</th>
                    </ui:repeat>
                    <c:if test="#{cc.attrs.hasActions}">
                        <th>#{dataTableMB.getFromBundle(cc.attrs.actionsHeader, cc.attrs.bundle)}</th>
                    </c:if>
                </tr>
            </thead>
            <tbody>
                <ui:repeat value="#{cc.attrs.content}" var="row">
                    <tr>
                    <ui:repeat value="#{fields}" var="field">
                        <td>#{dataTableMB.formatToPrint(row[field.name], field.printType)}</td>
                    </ui:repeat>
                    <c:if test="#{cc.attrs.hasActions}">
                        <td></td>
                    </c:if>
                    </tr>
                </ui:repeat>
            </tbody>
        </table>
        <div id="default-content-#{cc.clientId}" class="hide">
            <c:if test="#{cc.attrs.hasActions}">
                <cc:renderFacet name="actions"/>
            </c:if>
        </div>
        <div id="confirm-modal-#{cc.clientId}" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-body">
                        <p></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Sim</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Não</button>
                    </div>
                </div>
            </div>
        </div>
        <h:outputScript>
            $(document).ready(function () {
                createDataTable('#{cc.clientId}', #{cc.attrs.paging},
                        #{dataTableMB.parseColumnDefs(columnDefs, fields)}, #{cc.attrs.hasActions});
                <ui:repeat value="#{dataTableMB.parseActionEvents(cc.attrs.actionEvents)}" var="action">
                    bindDataTableEvents('#{cc.clientId}', '#{action.bindType}', '#{action.elementClass}',
                            '#{action.eventType}', '#{dataTableMB.buildJsCall(action, 'data')}',
                            '#{dataTableMB.getFromBundle(action.complement, cc.attrs.bundle)}');
                </ui:repeat>
            });
        </h:outputScript>
    </div>
</cc:implementation>
</html>