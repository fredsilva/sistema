#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// br.gov.to.sefaz.util.pdf.handler.LogicalExpressionFinderContext
	c1676 [label=<<table title="br.gov.to.sefaz.util.pdf.handler.LogicalExpressionFinderContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./LogicalExpressionFinderContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LogicalExpressionFinderContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LogicalExpressionFinderContext() </td></tr>
<tr><td align="left" balign="left"> + setToNextFind(replaceLength : int) </td></tr>
<tr><td align="left" balign="left"> + getExpressionName() : String </td></tr>
<tr><td align="left" balign="left"> + setExpressionName(expressionName : String) </td></tr>
<tr><td align="left" balign="left"> + getExpressionParams() : String </td></tr>
<tr><td align="left" balign="left"> + setExpressionParams(expressionParams : String) </td></tr>
<tr><td align="left" balign="left"> + getOffset() : int </td></tr>
<tr><td align="left" balign="left"> + setOffset(offset : int) </td></tr>
<tr><td align="left" balign="left"> + getOuterStartIdx() : int </td></tr>
<tr><td align="left" balign="left"> + getOuterEndIdx() : int </td></tr>
<tr><td align="left" balign="left"> + getInnerStartIdx() : int </td></tr>
<tr><td align="left" balign="left"> + getInnerEndIdx() : int </td></tr>
<tr><td align="left" balign="left"> + increaseOpensCount() </td></tr>
<tr><td align="left" balign="left"> + increaseClosesCount() </td></tr>
<tr><td align="left" balign="left"> + isFirstOpen() : boolean </td></tr>
<tr><td align="left" balign="left"> + sumOuterStartIdx(newStart : int) </td></tr>
<tr><td align="left" balign="left"> + sumInnerStartIdx(newEnd : int) </td></tr>
<tr><td align="left" balign="left"> + sumInnerEndIdx(newStart : int) </td></tr>
<tr><td align="left" balign="left"> + sumOuterEndIdx(newEnd : int) </td></tr>
<tr><td align="left" balign="left"> + isWantedClosure() : boolean </td></tr>
<tr><td align="left" balign="left"> + isExpressionName(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getOrigOuterStartIdx() : int </td></tr>
<tr><td align="left" balign="left"> + equals(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./LogicalExpressionFinderContext.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

