#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// br.gov.to.sefaz.persistence.repository.FindRepository
	c9100 [label=<<table title="br.gov.to.sefaz.persistence.repository.FindRepository" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./FindRepository.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FindRepository </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FindRepository() </td></tr>
<tr><td align="left" balign="left"> + findAll(entityClass : Class&lt;E&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + findNative(tableName : String, entityClass : Class&lt;E&gt;, alias : String, selectConsumer : Consumer&lt;SelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + findNative(tableName : String, entityClass : Class&lt;E&gt;, selectConsumer : Consumer&lt;SelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + find(entityClass : Class&lt;E&gt;, alias : String, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + find(entityClass : Class&lt;E&gt;, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + find(entityClass : Class&lt;E&gt;, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;, maxResults : int) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumnNative(tableName : String, alias : String, column : String, selectConsumer : Consumer&lt;SelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumnNative(tableName : String, column : String, selectConsumer : Consumer&lt;SelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumn(entityClass : Class&lt;?&gt;, alias : String, column : String, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumn(entityClass : Class&lt;?&gt;, column : String, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumn(entityClass : Class&lt;?&gt;, column : String, i : Object) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findOneNative(tableName : String, entityClass : Class&lt;E&gt;, alias : String, selectConsumer : Consumer&lt;SelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOneNative(tableName : String, entityClass : Class&lt;E&gt;, selectConsumer : Consumer&lt;SelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOne(entityClass : Class&lt;E&gt;, alias : String, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOne(entityClass : Class&lt;E&gt;, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOne(entityClass : Class&lt;E&gt;, i : Object) : E </td></tr>
<tr><td align="left" balign="left"> + findOneColumnNative(tableName : String, alias : String, column : String, selectConsumer : Consumer&lt;SelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumnNative(tableName : String, column : String, selectConsumer : Consumer&lt;SelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumn(entityClass : Class&lt;?&gt;, alias : String, column : String, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumn(entityClass : Class&lt;?&gt;, column : String, selectConsumer : Consumer&lt;HqlSelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumn(entityClass : Class&lt;?&gt;, column : String, i : Object) : R </td></tr>
<tr><td align="left" balign="left"> + countNative(tableName : String, alias : String, selectHandler : Consumer&lt;SelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + countNative(tableName : String, selectHandler : Consumer&lt;SelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + count(entityClass : Class&lt;?&gt;, alias : String, selectHandler : Consumer&lt;HqlSelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + count(entityClass : Class&lt;?&gt;, selectHandler : Consumer&lt;HqlSelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + count(entityClass : Class&lt;?&gt;, i : Object) : Long </td></tr>
<tr><td align="left" balign="left"> + existsNative(tableName : String, alias : String, selectHandler : Consumer&lt;SelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + existsNative(tableName : String, selectHandler : Consumer&lt;SelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + exists(entityClass : Class&lt;?&gt;, alias : String, selectHandler : Consumer&lt;HqlSelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + exists(entityClass : Class&lt;?&gt;, selectHandler : Consumer&lt;HqlSelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + exists(entityClass : Class&lt;?&gt;, i : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + selectColumnNative(selectBuilder : SelectBuilder) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + selectColumn(selectBuilder : HqlSelectBuilder) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + selectEntityNative(entityClass : Class&lt;E&gt;, selectBuilder : SelectBuilder) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + selectEntity(entityClass : Class&lt;E&gt;, hqlSelectBuilder : HqlSelectBuilder) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + selectEntity(entityClass : Class&lt;E&gt;, hqlSelectBuilder : HqlSelectBuilder, maxResults : int) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + selectOneNative(entityClass : Class&lt;E&gt;, selectBuilder : SelectBuilder) : E </td></tr>
<tr><td align="left" balign="left"> + selectOne(entityClass : Class&lt;E&gt;, hqlSelectBuilder : HqlSelectBuilder) : E </td></tr>
<tr><td align="left" balign="left"> + selectOneColumn(hqlSelectBuilder : HqlSelectBuilder) : R </td></tr>
<tr><td align="left" balign="left"> + selectOneColumnNative(selectBuilder : SelectBuilder) : R </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
<tr><td align="left" balign="left"> + selectNativeQuery(nativeQuery : String, params : ParamsBuilder) : List&lt;R&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./FindRepository.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

