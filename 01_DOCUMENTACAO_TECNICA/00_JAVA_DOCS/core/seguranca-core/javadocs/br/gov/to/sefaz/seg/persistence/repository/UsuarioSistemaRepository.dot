#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// br.gov.to.sefaz.seg.persistence.repository.UsuarioSistemaRepository
	c48406 [label=<<table title="br.gov.to.sefaz.seg.persistence.repository.UsuarioSistemaRepository" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./UsuarioSistemaRepository.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UsuarioSistemaRepository </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UsuarioSistemaRepository() </td></tr>
<tr><td align="left" balign="left"> + updateEstaBloqueado(bloqueado : boolean, dataDesbloqueio : LocalDateTime, cpf : String) </td></tr>
<tr><td align="left" balign="left"> + existsByCpfAndEmail(cpf : String, email : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + findAllUsuarioSistema(cpfUsuario : String, nomeCompletoUsuario : String, situacaoUsuario : SituacaoUsuarioEnum, tipoUsuario : Integer, codigoEstado : String, codigoMunicipio : Integer) : List&lt;UsuarioSistema&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllUsuarioSistemaPerfil(cpfUsuario : String, nomeCompletoUsuario : String, codigoUnidadeOrganizacional : Long, codigoPostoTrabalho : Integer) : List&lt;UsuarioSistema&gt; </td></tr>
<tr><td align="left" balign="left"> + findOne(cpf : String) : UsuarioSistema </td></tr>
<tr><td align="left" balign="left"> + updateDataUltimaAlteracaoSenha(dataUltimaAlteracaoSenha : LocalDateTime, cpf : String) </td></tr>
<tr><td align="left" balign="left"> + findAllUsuarioSistemaManutencao(nomeCompletoUsuario : String, cpf : String, dataCriacao : LocalDateTime, situacao : SituacaoUsuarioEnum, identificacaoUnidOrganizac : Long, identificacaoPostoTrabalho : Integer) : List&lt;UsuarioSistema&gt; </td></tr>
<tr><td align="left" balign="left"> + countByTipoUsuario(tipoUsuario : TipoUsuario) : Long </td></tr>
<tr><td align="left" balign="left"> + findAllByFilterParameters(cpfUsuario : String, nomeCompletoUsuario : String, codigoTipoUsuario : Integer, codigoPerfil : Long, codigoUnidadeOrganizacional : Long, codigoPostoTrabalho : Integer) : Collection&lt;UsuarioSistema&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./UsuarioSistemaRepository.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//br.gov.to.sefaz.seg.persistence.repository.UsuarioSistemaRepository extends br.gov.to.sefaz.persistence.repository.BaseRepository<br.gov.to.sefaz.seg.persistence.entity.UsuarioSistema, java.lang.String>
	c48431:p -> c48406:p [dir=back,arrowtail=empty];
	// br.gov.to.sefaz.persistence.repository.BaseRepository<E, I extends java.io.Serializable>
	c48431 [label=<<table title="br.gov.to.sefaz.persistence.repository.BaseRepository" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/br/gov/to/sefaz/persistence/repository/BaseRepository.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> BaseRepository&lt;E, I extends Serializable&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseRepository() </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + findNative(arg0 : String, arg1 : Consumer&lt;SelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + findNative(arg0 : Consumer&lt;SelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + find(arg0 : String, arg1 : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + find(arg0 : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumnNative(arg0 : String, arg1 : String, arg2 : Consumer&lt;SelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumnNative(arg0 : String, arg1 : Consumer&lt;SelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumn(arg0 : String, arg1 : String, arg2 : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumn(arg0 : String, arg1 : Consumer&lt;HqlSelectBuilder&gt;) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findColumn(arg0 : String, arg1 : I) : List&lt;R&gt; </td></tr>
<tr><td align="left" balign="left"> + findOneColumnNative(arg0 : String, arg1 : String, arg2 : String, arg3 : Consumer&lt;SelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumnNative(arg0 : String, arg1 : String, arg2 : Consumer&lt;SelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumnNative(arg0 : String, arg1 : Consumer&lt;SelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumn(arg0 : String, arg1 : String, arg2 : Consumer&lt;HqlSelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneColumn(arg0 : String, arg1 : Consumer&lt;HqlSelectBuilder&gt;) : R </td></tr>
<tr><td align="left" balign="left"> + findOneNative(arg0 : String, arg1 : Consumer&lt;SelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOneNative(arg0 : Consumer&lt;SelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOne(arg0 : String, arg1 : Consumer&lt;HqlSelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOne(arg0 : Consumer&lt;HqlSelectBuilder&gt;) : E </td></tr>
<tr><td align="left" balign="left"> + findOne(arg0 : I) : E </td></tr>
<tr><td align="left" balign="left"> + findOneColumn(arg0 : String, arg1 : I) : R </td></tr>
<tr><td align="left" balign="left"> + countNative(arg0 : String, arg1 : Consumer&lt;SelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + countNative(arg0 : Consumer&lt;SelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + count(arg0 : String, arg1 : Consumer&lt;HqlSelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + count(arg0 : Consumer&lt;HqlSelectBuilder&gt;) : Long </td></tr>
<tr><td align="left" balign="left"> + count(arg0 : I) : Long </td></tr>
<tr><td align="left" balign="left"> + existsNative(arg0 : String, arg1 : String, arg2 : Consumer&lt;SelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + existsNative(arg0 : String, arg1 : Consumer&lt;SelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + existsNative(arg0 : Consumer&lt;SelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + exists(arg0 : String, arg1 : Consumer&lt;HqlSelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + exists(arg0 : Consumer&lt;HqlSelectBuilder&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + exists(arg0 : I) : boolean </td></tr>
<tr><td align="left" balign="left"> + save(arg0 : E) : E </td></tr>
<tr><td align="left" balign="left"> + save(arg0 : Collection&lt;E&gt;) : Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + updateNative(arg0 : String, arg1 : Consumer&lt;UpdateBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + updateNative(arg0 : Consumer&lt;UpdateBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : String, arg1 : Consumer&lt;HqlUpdateBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Consumer&lt;HqlUpdateBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + deleteNative(arg0 : String, arg1 : Consumer&lt;DeleteBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + deleteNative(arg0 : Consumer&lt;DeleteBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + delete(arg0 : String, arg1 : Consumer&lt;HqlDeleteBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + delete(arg0 : Consumer&lt;HqlDeleteBuilder&gt;) </td></tr>
<tr><td align="left" balign="left"> + delete(arg0 : I) </td></tr>
<tr><td align="left" balign="left"> + delete(arg0 : Iterable&lt;I&gt;) </td></tr>
<tr><td align="left" balign="left"> + extractEntityCLassFromGenerics() : Class&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/br/gov/to/sefaz/persistence/repository/BaseRepository.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

