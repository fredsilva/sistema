#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// br.gov.to.sefaz.persistence.query.builder.hql.delete.HqlDeleteBuilder
	c673489 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.delete.HqlDeleteBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/delete/HqlDeleteBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlDeleteBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlDeleteBuilder(entityClass : Class&lt;?&gt;, alias : String) </td></tr>
<tr><td align="left" balign="left"> + HqlDeleteBuilder(entityClass : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + where() : WhereBuilder&lt;HqlDeleteBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + where(whereHandler : WhereHandler) : JunctionBuilder&lt;HqlDeleteBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + whereId(id : Object) : JunctionBuilder&lt;HqlDeleteBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlDeleteBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : DeleteStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/delete/HqlDeleteBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.hql.insert.HqlInsertBuilder
	c673492 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.insert.HqlInsertBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/insert/HqlInsertBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlInsertBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlInsertBuilder(entityClass : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + columns(columns : String[]) : HqlInsertBuilder </td></tr>
<tr><td align="left" balign="left"> + values(values : Object[]) : HqlInsertBuilder </td></tr>
<tr><td align="left" balign="left"> + values(subquery : HqlSelectBuilder) : HqlInsertBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlInsertBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : InsertStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/insert/HqlInsertBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.hql.select.groupby.HqlGroupByBuilder
	c673495 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.select.groupby.HqlGroupByBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/select/groupby/HqlGroupByBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlGroupByBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlGroupByBuilder(root : HqlSelectBuilder, columns : String[]) </td></tr>
<tr><td align="left" balign="left"> + having() : HqlHavingBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, order : Order) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, andFields : String[]) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : GroupByStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/select/groupby/HqlGroupByBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.hql.select.HqlSelectBuilder
	c673496 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.select.HqlSelectBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/select/HqlSelectBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlSelectBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlSelectBuilder(entityClass : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + HqlSelectBuilder(entityClass : Class&lt;?&gt;, alias : String) </td></tr>
<tr><td align="left" balign="left"> + column(field : String, alias : String) : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + columns(columns : String[]) : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + join(alias : Alias&lt;String&gt;, type : JoinType) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoin(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoin(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoin(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoin(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoin(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoin(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoin(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoin(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + joinFetch(alias : Alias&lt;String&gt;, type : JoinType) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + where() : HqlSelectWhereBuilder </td></tr>
<tr><td align="left" balign="left"> + whereId(id : Object) : HqlSelectJunctionBuilder </td></tr>
<tr><td align="left" balign="left"> + groupBy(columns : String[]) : HqlGroupByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, order : Order) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, andFields : String[]) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderById() : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + getFrom(field : String) : String </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : SelectStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/select/HqlSelectBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.hql.select.join.HqlJoinBuilder
	c673497 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.select.join.HqlJoinBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/select/join/HqlJoinBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlJoinBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlJoinBuilder(parent : HqlSelectBuilder, table : Alias&lt;String&gt;, type : JoinType) </td></tr>
<tr><td align="left" balign="left"> + with(onHandler : WhereHandler) : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + join(alias : Alias&lt;String&gt;, type : JoinType) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoin(table : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoin(table : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoin(table : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoin(table : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoin(table : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoin(table : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoin(table : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoin(table : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + joinFetch(alias : Alias&lt;String&gt;, type : JoinType) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoinFetch(table : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoinFetch(table : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoinFetch(field : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoinFetch(field : String, alias : String) : HqlJoinBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : JoinStructure </td></tr>
<tr><td align="left" balign="left"> + groupBy(columns : String[]) : HqlGroupByBuilder </td></tr>
<tr><td align="left" balign="left"> + where() : HqlSelectWhereBuilder </td></tr>
<tr><td align="left" balign="left"> + whereId(id : Object) : HqlSelectJunctionBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, order : Order) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, andFields : String[]) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderById() : HqlOrderByBuilder </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/select/join/HqlJoinBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.hql.select.orderby.HqlOrderByBuilder
	c673498 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.select.orderby.HqlOrderByBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/select/orderby/HqlOrderByBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlOrderByBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlOrderByBuilder(root : QueryStructureBuilder&lt;HqlSelectBuilder, ?&gt;, field : String, order : Order) </td></tr>
<tr><td align="left" balign="left"> + HqlOrderByBuilder(root : QueryStructureBuilder&lt;HqlSelectBuilder, ?&gt;, ordersBy : Map&lt;String, Order&gt;) </td></tr>
<tr><td align="left" balign="left"> + andBy(field : String, order : Order) : HqlOrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlSelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : OrderByStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/select/orderby/HqlOrderByBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.hql.update.HqlUpdateBuilder
	c673506 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.hql.update.HqlUpdateBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./hql/update/HqlUpdateBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HqlUpdateBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HqlUpdateBuilder(entityClass : Class&lt;?&gt;, alias : String) </td></tr>
<tr><td align="left" balign="left"> + HqlUpdateBuilder(entityClass : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + set(column : String, value : Object) : HqlUpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + setOpt(column : String, value : Object) : HqlUpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + setToColumn(column : String, value : String) : HqlUpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + where() : WhereBuilder&lt;HqlUpdateBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + where(whereHandler : WhereHandler) : JunctionBuilder&lt;HqlUpdateBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + whereId(id : Object) : JunctionBuilder&lt;HqlUpdateBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + getRoot() : HqlUpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : UpdateStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./hql/update/HqlUpdateBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./QueryStructureBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> QueryStructureBuilder&lt;T, S&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getRoot() : T </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + build() : S </font></td></tr>
		</table></td></tr>
		</table>>, URL="./QueryStructureBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.delete.DeleteBuilder
	c673510 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.delete.DeleteBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/delete/DeleteBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DeleteBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DeleteBuilder(from : String, alias : String) </td></tr>
<tr><td align="left" balign="left"> + DeleteBuilder(from : String) </td></tr>
<tr><td align="left" balign="left"> + where() : WhereBuilder&lt;DeleteBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + where(whereHandler : WhereHandler) : JunctionBuilder&lt;DeleteBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + getRoot() : DeleteBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : DeleteStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/delete/DeleteBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.insert.InsertBuilder
	c673511 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.insert.InsertBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/insert/InsertBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InsertBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InsertBuilder(into : String) </td></tr>
<tr><td align="left" balign="left"> + columns(columns : String[]) : InsertBuilder </td></tr>
<tr><td align="left" balign="left"> + values(values : Object[]) : InsertBuilder </td></tr>
<tr><td align="left" balign="left"> + values(subquery : SelectBuilder) : InsertBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : InsertBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : InsertStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/insert/InsertBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.select.groupby.GroupByBuilder
	c673514 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.select.groupby.GroupByBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/select/groupby/GroupByBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GroupByBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GroupByBuilder(root : SelectBuilder, columns : String[]) </td></tr>
<tr><td align="left" balign="left"> + having() : HavingBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, order : Order) : OrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, andFields : String[]) : OrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : GroupByStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/select/groupby/GroupByBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.select.join.JoinBuilder
	c673515 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.select.join.JoinBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/select/join/JoinBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JoinBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JoinBuilder(parent : SelectBuilder, table : Alias&lt;String&gt;, type : JoinType) </td></tr>
<tr><td align="left" balign="left"> + on(onHandler : WhereHandler) : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + on(leftColumn : String, rightColumn : String) : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + on(column : String) : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : JoinStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/select/join/JoinBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.select.orderby.OrderByBuilder
	c673516 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.select.orderby.OrderByBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/select/orderby/OrderByBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OrderByBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OrderByBuilder(root : QueryStructureBuilder&lt;SelectBuilder, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + OrderByBuilder(root : QueryStructureBuilder&lt;SelectBuilder, ?&gt;, field : String, order : Order) </td></tr>
<tr><td align="left" balign="left"> + OrderByBuilder(root : QueryStructureBuilder&lt;SelectBuilder, ?&gt;, ordersBy : Map&lt;String, Order&gt;) </td></tr>
<tr><td align="left" balign="left"> + andBy(field : String, order : Order) : OrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + getRoot() : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : OrderByStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/select/orderby/OrderByBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.select.SelectBuilder
	c673517 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.select.SelectBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/select/SelectBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SelectBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SelectBuilder(table : String) </td></tr>
<tr><td align="left" balign="left"> + SelectBuilder(table : String, alias : String) </td></tr>
<tr><td align="left" balign="left"> + SelectBuilder(select : QueryStructureBuilder&lt;SelectBuilder, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + SelectBuilder(select : QueryStructureBuilder&lt;SelectBuilder, ?&gt;, alias : String) </td></tr>
<tr><td align="left" balign="left"> + column(field : String, alias : String) : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + columns(columns : String[]) : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + join(alias : Alias&lt;String&gt;, type : JoinType) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoin(table : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + innerJoin(table : String, alias : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoin(table : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + leftJoin(table : String, alias : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoin(table : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + rightJoin(table : String, alias : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoin(table : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + fullJoin(table : String, alias : String) : JoinBuilder </td></tr>
<tr><td align="left" balign="left"> + where() : SelectWhereBuilder </td></tr>
<tr><td align="left" balign="left"> + groupBy(columns : String[]) : GroupByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, order : Order) : OrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + orderBy(field : String, andFields : String[]) : OrderByBuilder </td></tr>
<tr><td align="left" balign="left"> + getFrom() : String </td></tr>
<tr><td align="left" balign="left"> + getRoot() : SelectBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : SelectStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/select/SelectBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.update.UpdateBuilder
	c673525 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.update.UpdateBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/update/UpdateBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UpdateBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UpdateBuilder(from : String, alias : String) </td></tr>
<tr><td align="left" balign="left"> + UpdateBuilder(from : String) </td></tr>
<tr><td align="left" balign="left"> + set(column : String, value : Object) : UpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + setOpt(column : String, value : Object) : UpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + setToColumn(column : String, value : String) : UpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + where() : WhereBuilder&lt;UpdateBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + where(whereHandler : WhereHandler) : JunctionBuilder&lt;UpdateBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> + getRoot() : UpdateBuilder </td></tr>
<tr><td align="left" balign="left"> + build() : UpdateStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/update/UpdateBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder<W extends br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder<W, T, J>, T, J extends br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractJunctionBuilder<W, T>>
	c673530 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/where/AbstractWhereBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> AbstractWhereBuilder&lt;W extends AbstractWhereBuilder&lt;W, T, J&gt;, T, J extends AbstractJunctionBuilder&lt;W, T&gt;&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractWhereBuilder(root : QueryStructureBuilder&lt;T, ?&gt;, junctionBuilderSupplier : Function&lt;W, J&gt;) </td></tr>
<tr><td align="left" balign="left"> + not() : W </td></tr>
<tr><td align="left" balign="left"> + opt() : W </td></tr>
<tr><td align="left" balign="left"> + isNull(column : String) : J </td></tr>
<tr><td align="left" balign="left"> + between(column : String, valueStart : Object, valueEnd : Object) : J </td></tr>
<tr><td align="left" balign="left"> + between(value : Value, valueStart : Value, valueEnd : Value) : J </td></tr>
<tr><td align="left" balign="left"> + betweenColumns(value : Object, columnStart : String, columnEnd : String) : J </td></tr>
<tr><td align="left" balign="left"> + in(column : String, values : Object[]) : J </td></tr>
<tr><td align="left" balign="left"> + in(column : String, values : Iterable&lt;Object&gt;) : J </td></tr>
<tr><td align="left" balign="left"> + in(column : String, values : Value[]) : J </td></tr>
<tr><td align="left" balign="left"> + in(column : String, subquery : QueryStructureBuilder&lt;?, ?&gt;) : J </td></tr>
<tr><td align="left" balign="left"> + exists(subquery : QueryStructureBuilder&lt;?, ?&gt;) : J </td></tr>
<tr><td align="left" balign="left"> + like(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + manualLike(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + lessThan(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + lessThanColumns(leftColumn : String, rightColumn : String) : J </td></tr>
<tr><td align="left" balign="left"> + lessEqualThan(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + lessEqualThanColumns(leftColumn : String, rightColumn : String) : J </td></tr>
<tr><td align="left" balign="left"> + greaterThan(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + greaterThanColumns(leftColumn : String, rightColumn : String) : J </td></tr>
<tr><td align="left" balign="left"> + greaterEqualThan(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + greaterEqualThanColumns(leftColumn : String, rightColumn : String) : J </td></tr>
<tr><td align="left" balign="left"> + different(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + differentColumns(leftColumn : String, rightColumn : String) : J </td></tr>
<tr><td align="left" balign="left"> + equal(column : String, value : Object) : J </td></tr>
<tr><td align="left" balign="left"> + equalColumns(leftColumn : String, rightColumn : String) : J </td></tr>
<tr><td align="left" balign="left"> + condition(handler : WhereHandler) : J </td></tr>
<tr><td align="left" balign="left"> + getRoot() : T </td></tr>
<tr><td align="left" balign="left"> + build() : ConditionsStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/where/AbstractWhereBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractJunctionBuilder<W extends br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder<?, T, ?>, T>
	c673531 [label=<<table title="br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractJunctionBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sql/where/AbstractJunctionBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> AbstractJunctionBuilder&lt;W extends AbstractWhereBuilder&lt;?, T, ?&gt;, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractJunctionBuilder(parent : W) </td></tr>
<tr><td align="left" balign="left"> + and() : W </td></tr>
<tr><td align="left" balign="left"> + or() : W </td></tr>
<tr><td align="left" balign="left"> + getRoot() : T </td></tr>
<tr><td align="left" balign="left"> + build() : Optional&lt;JunctionOperator&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./sql/where/AbstractJunctionBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//br.gov.to.sefaz.persistence.query.builder.hql.delete.HqlDeleteBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673489:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.hql.insert.HqlInsertBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673492:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.hql.select.groupby.HqlGroupByBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673495:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.hql.select.HqlSelectBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673496:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.hql.select.join.HqlJoinBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673497:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.hql.select.orderby.HqlOrderByBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673498:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.hql.update.HqlUpdateBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673506:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.delete.DeleteBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673510:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.insert.InsertBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673511:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.select.groupby.GroupByBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673514:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.select.join.JoinBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673515:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.select.orderby.OrderByBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673516:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.select.SelectBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673517:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.update.UpdateBuilder implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673525:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder<W extends br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder<W, T, J>, T, J extends br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractJunctionBuilder<W, T>> implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673530:p [dir=back,arrowtail=empty,style=dashed];
	//br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractJunctionBuilder<W extends br.gov.to.sefaz.persistence.query.builder.sql.where.AbstractWhereBuilder<?, T, ?>, T> implements br.gov.to.sefaz.persistence.query.builder.QueryStructureBuilder<T, S>
	c673507:p -> c673531:p [dir=back,arrowtail=empty,style=dashed];
}

